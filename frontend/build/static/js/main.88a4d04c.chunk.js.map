{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Loader.js","components/Message.js","components/Rating.js","components/Product.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_CLEAR_ITEMS","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_SEND_REQUEST","ORDER_SEND_SUCCESS","ORDER_SEND_FAIL","ORDER_SEND_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_MY_LIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productCreate","success","productUpdate","productDelete","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","i","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userUpdate","userDelete","orderCreate","order","orderDetails","orderItems","orderPay","orderSend","orderMyList","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","className","onSubmit","e","preventDefault","trim","push","Control","name","placeholder","onChange","target","value","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isAdmin","Footer","Row","Col","Loader","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","Rating","text","color","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Paginate","Pagination","Array","keys","x","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","defaultProps","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","quantity","setQuantity","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","window","reload","Group","controlId","Label","rows","textDecoration","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isSent","sentOn","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingSend","successSend","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","paypal","replace","amount","currency","onSuccess","paymentResult","payOrder","sendOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","varaint","updateUser","ProductListScreen","loadingCreate","errorCreate","successCreate","createdProduct","loadingDelete","errorDelete","deleteProduct","genre","company","ProductEditScreen","setPrice","setImage","setGenre","setCompany","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","console","log","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.88a4d04c.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_SEND_REQUEST = 'ORDER_SEND_REQUEST';\r\nexport const ORDER_SEND_SUCCESS = 'ORDER_SEND_SUCCESS';\r\nexport const ORDER_SEND_FAIL = 'ORDER_SEND_FAIL';\r\nexport const ORDER_SEND_RESET = 'ORDER_SEND_RESET';\r\n\r\nexport const ORDER_MY_LIST_REQUEST = 'ORDER_MY_LIST_REQUEST';\r\nexport const ORDER_MY_LIST_SUCCESS = 'ORDER_MY_LIST_SUCCESS';\r\nexport const ORDER_MY_LIST_FAIL = 'ORDER_MY_LIST_FAIL';\r\nexport const ORDER_MY_LIST_RESET = 'ORDER_MY_LIST_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n","import { \r\n  createStore, \r\n  combineReducers, \r\n  applyMiddleware \r\n} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { \r\n  productListReducer, \r\n  productDetailsReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productDeleteReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer \r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { \r\n  userLoginReducer, \r\n  userRegisterReducer, \r\n  userDetailsReducer, \r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userUpdateReducer,\r\n  userDeleteReducer\r\n} from './reducers/userReducers';\r\nimport { \r\n  orderCreateReducer, \r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderSendReducer,\r\n  orderMyListReducer,\r\n  orderListReducer\r\n} from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productDelete: productDeleteReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userUpdate: userUpdateReducer,\r\n  userDelete: userDeleteReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderSend: orderSendReducer,\r\n  orderMyList: orderMyListReducer,\r\n  orderList: orderListReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') \r\n  ? JSON.parse(localStorage.getItem('cartItems')) \r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') \r\n  ? JSON.parse(localStorage.getItem('userInfo')) \r\n  : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') \r\n  ? JSON.parse(localStorage.getItem('shippingAddress')) \r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: { \r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage \r\n  },\r\n  userLogin: { \r\n    userInfo: userInfoFromStorage \r\n  }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer, \r\n  initialState, \r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store;\r\n","import { \r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL \r\n } from '../constants/productConstants';\r\n\r\nexport const productListReducer = (\r\n  state = { products: [] }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { \r\n        loading: true, \r\n        products: [] \r\n      };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        products: action.payload.products,\r\n        page: action.payload.page,  \r\n        pages: action.payload.pages \r\n      };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const productDetailsReducer = (\r\n  state = { \r\n    product: { reviews: [] } \r\n  }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { \r\n        ...state, \r\n        loading: true \r\n      };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        product: action.payload \r\n      };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true, \r\n        product: action.payload \r\n      };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const productUpdateReducer = (\r\n  state = { product: {} },\r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true, \r\n        product: action.payload \r\n      };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true \r\n      };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true \r\n      };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const productTopRatedReducer = (\r\n  state = { products: [] }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case PRODUCT_TOP_REQUEST:\r\n      return { \r\n        loading: true, \r\n        products: [] \r\n      };\r\n    case PRODUCT_TOP_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        products: action.payload \r\n      };\r\n    case PRODUCT_TOP_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { \r\n  CART_ADD_ITEM, \r\n  CART_REMOVE_ITEM,\r\n  CART_CLEAR_ITEMS,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD \r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { \r\n    cartItems: [], \r\n    shippingAddress: {} \r\n  }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case CART_ADD_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find(i => i.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map(i => i.product === existItem.product ? item : i)\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item]\r\n        };\r\n      }\r\n    case CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n      };\r\n    case CART_CLEAR_ITEMS:\r\n      return {\r\n        ...state,\r\n        cartItems: []\r\n      };\r\n    case CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload\r\n      };\r\n    case CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { \r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET \r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case USER_LOGIN_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        userInfo: action.payload \r\n      };\r\n    case USER_LOGIN_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        userInfo: action.payload \r\n      };\r\n    case USER_REGISTER_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (\r\n  state = { user: {} }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { \r\n        ...state, \r\n        loading: true \r\n      };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        user: action.payload \r\n      };\r\n    case USER_DETAILS_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true, \r\n        userInfo: action.payload \r\n      };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userListReducer = (\r\n  state = { users: [] }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        users: action.payload \r\n      };\r\n    case USER_LIST_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userUpdateReducer = (\r\n  state = { user: {} }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true \r\n      };\r\n    case USER_UPDATE_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    case USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { \r\n        loading: false, \r\n        success: true \r\n      };\r\n    case USER_DELETE_FAIL:\r\n      return { \r\n        loading: false, \r\n        error: action.payload \r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { \r\n  ORDER_CREATE_REQUEST, \r\n  ORDER_CREATE_SUCCESS, \r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_REQUEST, \r\n  ORDER_DETAILS_SUCCESS, \r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST, \r\n  ORDER_PAY_SUCCESS, \r\n  ORDER_PAY_FAIL, \r\n  ORDER_PAY_RESET,\r\n  ORDER_SEND_REQUEST,\r\n  ORDER_SEND_SUCCESS,\r\n  ORDER_SEND_FAIL,\r\n  ORDER_SEND_RESET, \r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_SUCCESS,\r\n  ORDER_MY_LIST_FAIL,\r\n  ORDER_MY_LIST_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { \r\n    loading: true, \r\n    orderItems: [], \r\n    shippingAddress: {} \r\n  }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const orderSendReducer = (state = {}, action) => {\r\n  switch(action.type) {\r\n    case ORDER_SEND_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_SEND_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ORDER_SEND_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_SEND_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const orderMyListReducer = (\r\n  state = { orders: [] }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case ORDER_MY_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_MY_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      };\r\n    case ORDER_MY_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_MY_LIST_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (\r\n  state = { orders: [] }, \r\n  action\r\n) => {\r\n  switch(action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form \r\n      className='\r\n        d-flex \r\n        my-2\r\n        my-lg-0' \r\n      onSubmit={submitHandler}\r\n    >\r\n      <Form.Control \r\n        type='text' \r\n        name='q' \r\n        placeholder='Search for...' \r\n        className='\r\n          ms-0 \r\n          ms-lg-2 \r\n          me-lg-2\r\n          px-4'\r\n        onChange={(e) => setKeyword(e.target.value)} \r\n      >\r\n      </Form.Control>\r\n      <Button \r\n        type='submit' \r\n        variant='outline-light' \r\n        className='\r\n          p-2 \r\n          px-3 \r\n          px-sm-5\r\n          px-lg-2 \r\n          ms-2'\r\n      >\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import axios from 'axios';\r\nimport { \r\n  USER_LOGIN_REQUEST, \r\n  USER_LOGIN_SUCCESS, \r\n  USER_LOGIN_FAIL, \r\n  USER_LOGOUT,\r\n  USER_REGISTER_REQUEST, \r\n  USER_REGISTER_SUCCESS, \r\n  USER_REGISTER_FAIL,\r\n  USER_DETAILS_REQUEST, \r\n  USER_DETAILS_SUCCESS, \r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_RESET,\r\n  USER_UPDATE_PROFILE_REQUEST, \r\n  USER_UPDATE_PROFILE_SUCCESS, \r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,  \r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL \r\n} from '../constants/userConstants';\r\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post('/api/users/login', { email, password }, config);\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  dispatch({ type: ORDER_MY_LIST_RESET })\r\n  document.location.href = '/login';\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post('/api/users', { name, email, password }, config);\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_PROFILE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put('/api/users/profile', user, config);\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_LIST_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get('/api/users', config);\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_UPDATE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: USER_DELETE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n    \r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route } from 'react-router-dom';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\nimport SearchBox from '../components/SearchBox';\r\nimport { logout } from '../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <header>\r\n      <Navbar \r\n        bg='dark' \r\n        variant='dark' \r\n        expand='lg' \r\n        collapseOnSelect\r\n        className='\r\n          border-bottom \r\n          border-2 \r\n          border-light'\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand \r\n              className='\r\n                d-flex \r\n                align-items-center'\r\n            >\r\n              <i className='fas fa-gamepad fa-lg me-2'></i>\r\n              Game Master\r\n            </Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav \r\n              className='\r\n                ms-2 \r\n                ms-lg-auto \r\n                my-1 \r\n                my-lg-0'\r\n            >\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>\r\n                      Profile\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user-circle'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Control Panel' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>\r\n                      Users\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>\r\n                      Products\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>\r\n                      Orders\r\n                    </NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer \r\n      className='\r\n        border \r\n        border-start-0 \r\n        border-end-0 \r\n        border-3 \r\n        border-secondary'\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Col \r\n            className='\r\n              text-color-white \r\n              text-center \r\n              py-3'\r\n          >\r\n            Game Master Shop &copy; 2021\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <Spinner \r\n        animation='border' \r\n        role='status'\r\n        variant='secondary' \r\n        style={{ \r\n          width: '100px', \r\n          height: '100px', \r\n          margin: 'auto', \r\n          display: 'block' \r\n        }}\r\n      >\r\n        <span className='sr-only'>Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <Alert variant={variant}>\r\n      {children}\r\n    </Alert>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 1 \r\n              ? 'fas fa-star' \r\n              : value >= 0.5 \r\n              ? 'fas fa-star-half-alt' \r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 2 \r\n              ? 'fas fa-star' \r\n              : value >= 1.5 \r\n              ? 'fas fa-star-half-alt' \r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 3 \r\n              ? 'fas fa-star' \r\n              : value >= 2.5 \r\n              ? 'fas fa-star-half-alt' \r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 4 \r\n              ? 'fas fa-star' \r\n              : value >= 3.5 \r\n              ? 'fas fa-star-half-alt' \r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i style={{color}}\r\n          className={\r\n            value >= 5 \r\n              ? 'fas fa-star' \r\n              : value >= 4.5 \r\n              ? 'fas fa-star-half-alt' \r\n              : 'far fa-star'\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card \r\n      className='\r\n        p-3 \r\n        my-3 \r\n        bg-dark \r\n        border-primary \r\n        rounded'\r\n    >\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as='div'>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as='div'>\r\n          <Rating \r\n            value={product.rating} \r\n            text={`${product.numReviews} reviews`}\r\n            color='#44d9e8' \r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as='h3'>{product.price} zł</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ \r\n  pages, \r\n  page, \r\n  isAdmin = false, \r\n  keyword = '' \r\n}) => {\r\n  return pages > 1 && (\r\n    <Pagination>\r\n      {[...Array(pages).keys()].map(x => (\r\n        <LinkContainer \r\n          key={x + 1} \r\n          to={\r\n            !isAdmin \r\n              ? keyword \r\n                ? `/search/${keyword}/page/${x + 1}` \r\n                : `/page/${x + 1}` \r\n              : `/admin/productlist/${x + 1}`\r\n            }\r\n        >\r\n          <Pagination.Item active={x + 1 === page}>\r\n            {x + 1}\r\n          </Pagination.Item>\r\n        </LinkContainer>\r\n      ))}\r\n    </Pagination>\r\n  );\r\n}\r\n\r\nexport default Paginate;\r\n","import axios from 'axios';\r\nimport { \r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL  \r\n } from '../constants/productConstants';\r\n import { logout } from '../actions/userActions';\r\n\r\n export const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n  try {\r\n    dispatch ({ type: PRODUCT_LIST_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch ({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post('/api/products', {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/products/${product._id}`, product, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    })\r\n    dispatch({ \r\n      type: PRODUCT_DETAILS_SUCCESS, \r\n      payload: data \r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config)\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n    dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\r\n    window.location.reload()\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n    \r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch ({ type: PRODUCT_TOP_REQUEST })\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload: \r\n        error.response && error.response.data.message \r\n          ? error.response.data.message \r\n          : error.message\r\n    })\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector(state => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel \r\n      pause='hover' \r\n      className='\r\n        card \r\n        border \r\n        border-3 \r\n        border-light \r\n        rounded \r\n        bg-dark'\r\n    >\r\n      {products.map(product => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>{product.name} ({product.price} zł)</h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  );\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Game Master - All Things Games! 🎮',\r\n  description: 'The best video games at the best prices!',\r\n  keywords: 'games, video games, e-commerce, best video games, cheap video games'\r\n}\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Product from '../components/Product';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword;\r\n\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-outline-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1 \r\n        className='\r\n          text-color-white \r\n          text-center \r\n          mt-3'\r\n      >\r\n        Latest Games\r\n      </h1>\r\n      {loading ? ( \r\n        <Loader /> \r\n        ) : error ? (\r\n        <Message variant='danger'>{error}</Message> \r\n        ) : (\r\n          <>\r\n            <Row \r\n              className='\r\n                justify-content-center \r\n                justify-content-lg-start'\r\n            >\r\n              {products.map(product => (\r\n                <Col \r\n                  key={product._id} \r\n                  sm={10} \r\n                  md={6} \r\n                  lg={4} \r\n                  xl={3} \r\n                  className='col-11'\r\n                >\r\n                  <Product product={product} />\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\r\n          </>\r\n        )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Row, Col, Form, ListGroup, Card, Image, Button } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\r\n  const { \r\n    success: successProductReview, \r\n    loading: loadingProductReview, \r\n    error: errorProductReview \r\n  } = productReviewCreate;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== match.params.id) {\r\n      dispatch(listProductDetails(match.params.id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, match, successProductReview, product._id])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?quantity=${quantity}`)\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(createProductReview(match.params.id, {\r\n      rating, \r\n      comment\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-outline-light my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <Loader /> \r\n      ) : error ? ( \r\n        <Message variant='danger'>{error}</Message> \r\n      ) : (\r\n        <>\r\n          <Meta title={`Game Master | ${product.name}`} />\r\n          <Row>\r\n            <Col md={7} lg={6} className='mb-4 mb-lg-0 ms-lg-5'>\r\n              <Image \r\n                src={product.image} \r\n                alt={product.name} \r\n                fluid \r\n              />\r\n            </Col>\r\n            <Col md={5} lg={4} className='mb-3 mb-sm-4 mb-lg-0'>\r\n              <Card className='border-primary rounded'>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    <Row>\r\n                      <Col>\r\n                        Price:\r\n                      </Col>\r\n                      <Col>\r\n                        <strong>\r\n                          {product.price} zł\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    <Row>\r\n                      <Col>\r\n                        Status:\r\n                      </Col>\r\n                      <Col>\r\n                        <strong>\r\n                          {product.countInStock > 0 \r\n                            ? 'In Stock' \r\n                            : 'Out Of Stock'\r\n                          }\r\n                        </strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item className='bg-dark'>\r\n                      <Row>\r\n                        <Col>Quantity</Col>\r\n                        <Col>\r\n                          <Form.Control \r\n                            as='select' \r\n                            value={quantity} \r\n                            onChange={(e) => setQuantity(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(x => (\r\n                              <option key={x + 1} value={x + 1}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}        \r\n\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    <Button\r\n                      type='button'\r\n                      variant='outline-primary'\r\n                      className='w-100' \r\n                      onClick={addToCartHandler}  \r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row className='my-3'>\r\n            <Col \r\n              md={12} \r\n              className='\r\n                border \r\n                border-3 \r\n                border-light \r\n                bg-dark\r\n                remove-border-text'\r\n            >\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    <h3>{product.name}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    <Rating \r\n                      value={product.rating}\r\n                      text={`${product.numReviews} reviews`}\r\n                      color='#44d9e8' \r\n                    />\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    Price: {product.price} zł\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    Description: \r\n                    <span \r\n                      className='my-2' \r\n                      style={{display: 'block'}}\r\n                    >\r\n                      {product.description}\r\n                    </span>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Col>\r\n          </Row>\r\n          <Row className='my-3'>\r\n            <Col md={12}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && \r\n                <Message>\r\n                  <span className='text-color-white'>No Reviews Yet.</span>\r\n                </Message>\r\n              }\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map(review => (\r\n                  <ListGroup.Item \r\n                    key={review._id} \r\n                    className='\r\n                      border \r\n                      border-start-0 \r\n                      border-end-0 \r\n                      border-top-0 \r\n                      border-3 \r\n                      border-light \r\n                      bg-dark'\r\n                  >\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} color='#44d9e8'/>\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item className='bg-dark'>\r\n                  <h2 className='text-color-cyan text-center'>Write Your Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>\r\n                      {errorProductReview}\r\n                    </Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating' className='mb-1'>\r\n                        <Form.Label className='text-color-cyan'>Rating:</Form.Label>\r\n                        <Form.Control \r\n                          as='select' \r\n                          value={rating} \r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Terrible</option>\r\n                          <option value='2'>2 - Bad</option>\r\n                          <option value='3'>3 - Solid</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Perfect</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment' className='mb-1'>\r\n                        <Form.Label className='text-color-cyan'>Comment:</Form.Label>\r\n                        <Form.Control \r\n                          as='textarea' \r\n                          rows={3} \r\n                          value={comment} \r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Container className='text-center'>\r\n                        <Button\r\n                          disabled={loadingProductReview}\r\n                          type='submit'\r\n                          variant='outline-light'\r\n                          className='w-25 mt-3 btn-res'\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </Container>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please {' '} \r\n                      <Link to='/login'>\r\n                        <strong \r\n                          className='link-hover text-color-white' \r\n                          style={{textDecoration: 'underline'}}\r\n                        >\r\n                          sign in\r\n                        </strong>\r\n                      </Link> \r\n                      {' '} to write a review. \r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          </>\r\n        )\r\n      } \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport { \r\n  CART_ADD_ITEM, \r\n  CART_REMOVE_ITEM,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      quantity\r\n    }\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: CART_REMOVE_ITEM,\r\n    payload: id\r\n  })\r\n\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  })\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Form, Card, Button } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const quantity = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItems } = cart;\r\n  \r\n  useEffect(() => {\r\n    if(productId) {\r\n      dispatch(addToCart(productId, quantity))\r\n    }\r\n  }, [dispatch, productId, quantity])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Cart'} />\r\n      <Row>\r\n        <Col md={7} lg={8}>\r\n          <h1 className='text-color-white'>Shopping Cart</h1>\r\n          {cartItems.length === 0 ? ( \r\n            <Message variant='info'>Your cart is empty.  \r\n              <Link to='/'>\r\n                {' '}  \r\n                <strong style={{textDecoration: 'underline'}}>\r\n                  Go Back\r\n                </strong>\r\n              </Link>\r\n            </Message> \r\n          ) : (\r\n            <ListGroup variant='flush'>\r\n              {cartItems.map(item => (\r\n                <ListGroup.Item \r\n                  key={item.product} \r\n                  className='\r\n                    border \r\n                    border-start-0 \r\n                    border-end-0\r\n                    border-top-0 \r\n                    border-3 \r\n                    border-light \r\n                    bg-dark'\r\n                >\r\n                  <Row>\r\n                    <Col sm={2} className='col-3'>\r\n                      <Image \r\n                        src={item.image} \r\n                        alt={item.name} \r\n                        fluid \r\n                        rounded \r\n                      />\r\n                    </Col>\r\n                    <Col md={3} className='col-5'>\r\n                      <Link \r\n                        className='\r\n                          text-color-white \r\n                          link-hover' \r\n                        to={`/product/${item.product}`}\r\n                      >\r\n                        {item.name}\r\n                      </Link>\r\n                    </Col>\r\n                    <Col \r\n                      sm={5} \r\n                      md={2}\r\n                      className='col-4' \r\n                    >\r\n                      {item.price} zł\r\n                    </Col>\r\n                    <Col \r\n                      md={2} \r\n                      className='\r\n                        col-8\r\n                        my-3 \r\n                        my-sm-2\r\n                        my-lg-0'\r\n                    >\r\n                      <Form.Control \r\n                        as='select' \r\n                        value={item.quantity} \r\n                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((i) => (\r\n                          <option key={i + 1} value={i + 1}>\r\n                            {i + 1}\r\n                          </option>\r\n                        ))}\r\n                      </Form.Control>\r\n                    </Col>\r\n                    <Col \r\n                      md={2} \r\n                      className='\r\n                        col-4\r\n                        my-3 \r\n                        my-sm-2\r\n                        my-lg-0'\r\n                    >\r\n                      <Button \r\n                        type='button' \r\n                        variant='danger' \r\n                        onClick={() => removeFromCartHandler(item.product)}\r\n                      >\r\n                        <i className='fas fa-trash'></i>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          )}\r\n        </Col>\r\n        <Col md={5} lg={4} className='mt-3 mt-lg-0'>\r\n          <Card className='border-primary rounded'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item className='bg-dark'> \r\n                <h2 className='text-color-cyan'>\r\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.quantity, 0)}) items\r\n                </h2>\r\n                {cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)} zł\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Button \r\n                  type='button' \r\n                  variant='outline-primary'\r\n                  className='w-100' \r\n                  disabled={cartItems.length === 0} \r\n                  onClick={checkoutHandler}\r\n                >\r\n                  Proceed To Checkout\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if(userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [userInfo, history, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Login'} />\r\n      <FormContainer>\r\n        <h1 className='text-color-white'>Sign In</h1>\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='email' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Email\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='email' \r\n              placeholder='Enter your email' \r\n              value={email} \r\n              onChange={(e) => setEmail(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Password\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Enter your password' \r\n              value={password} \r\n              onChange={(e) => setPassword(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Container className='text-center'>\r\n            <Button\r\n              type='submit' \r\n              variant='outline-light' \r\n              className='\r\n                w-50 \r\n                mt-3 \r\n                btn-res'\r\n            >\r\n              Sign In\r\n            </Button>\r\n          </Container>\r\n\r\n          <Row className='py-3'>\r\n            <Col className='text-color-white'>\r\n              Don't have an account yet? {' '} \r\n              <Link \r\n                to={redirect ? \r\n                  `/register?redirect=${redirect}` : \r\n                  '/register'\r\n                }> \r\n                <strong \r\n                  className='link-hover text-color-white' \r\n                  style={{textDecoration: 'underline'}}\r\n                >\r\n                  Sign Up\r\n                </strong>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if(userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [userInfo, history, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match!')\r\n    } else if (!name || !email || !password) {\r\n      setMessage('Name, email and password fields are required!')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Register'} />\r\n      <FormContainer>\r\n        <h1 className='text-color-white'>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Name\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='name' \r\n              placeholder='Enter your name' \r\n              value={name} \r\n              onChange={(e) => setName(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Email\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='email' \r\n              placeholder='Enter your email' \r\n              value={email} \r\n              onChange={(e) => setEmail(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Password\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Enter your password' \r\n              value={password} \r\n              onChange={(e) => setPassword(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Confirm Password\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='password' \r\n              placeholder='Confirm password' \r\n              value={confirmPassword} \r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Container className='text-center'>\r\n            <Button \r\n              type='submit'  \r\n              variant='outline-light'\r\n              className='w-50 mt-3 btn-res'\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </Container>\r\n\r\n          <Row className='py-3'>\r\n            <Col className='text-color-white'>\r\n              Already have an account? {' '} \r\n              <Link \r\n                to={redirect ? \r\n                  `/login?redirect=${redirect}` : \r\n                  '/login'\r\n                }\r\n              > \r\n                <strong \r\n                  className='link-hover text-color-white' \r\n                  style={{textDecoration: 'underline'}}\r\n                > \r\n                  Sign In\r\n                </strong>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Row, Col, Form, Table, Button } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { myOrdersList } from '../actions/orderActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderMyList = useSelector(state => state.orderMyList);\r\n  const { \r\n    loading: loadingOrders, \r\n    error: errorOrders, \r\n    orders \r\n  } = orderMyList;\r\n\r\n  useEffect(() => {\r\n    if(!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(myOrdersList())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match!')\r\n    } else {\r\n      dispatch(updateUserProfile({ \r\n        id: user._id, \r\n        name, \r\n        email, \r\n        password \r\n      }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Profile'} />\r\n      <Row>\r\n        <Col lg={3} md={4} className='bg-dark'>\r\n          <h2 className='text-center'>User Profile</h2>\r\n          {message && <Message variant='danger'>{message}</Message>}\r\n          {}\r\n          {success && <Message variant='success'>Profile Updated!</Message>}\r\n          {loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>\r\n              {error}\r\n            </Message>\r\n          ) : (\r\n            <Form onSubmit={submitHandler}>\r\n              <Form.Group controlId='name' className='mb-1'>\r\n                  <Form.Label className='text-color-white'>\r\n                    Name:\r\n                  </Form.Label>\r\n                  <Form.Control \r\n                    type='name' \r\n                    placeholder='Enter your name' \r\n                    value={name} \r\n                    onChange={(e) => setName(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' className='mb-1'>\r\n                  <Form.Label className='text-color-white'>\r\n                    Email:\r\n                  </Form.Label>\r\n                  <Form.Control \r\n                    type='email' \r\n                    placeholder='Enter your email' \r\n                    value={email} \r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password' className='mb-1'>\r\n                  <Form.Label className='text-color-white'>\r\n                    Password:\r\n                  </Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Enter your password' \r\n                    value={password} \r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword' className='mb-1'>\r\n                  <Form.Label className='text-color-white'>\r\n                    Confirm Password:\r\n                  </Form.Label>\r\n                  <Form.Control \r\n                    type='password' \r\n                    placeholder='Confirm password' \r\n                    value={confirmPassword} \r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  >\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Container className='text-center'>\r\n                  <Button \r\n                    className='my-3 btn-res' \r\n                    type='submit' \r\n                    variant='outline-light'\r\n                  >\r\n                    Update your profile\r\n                  </Button>\r\n                </Container>\r\n              </Form>\r\n            )\r\n          }\r\n        </Col>\r\n        <Col \r\n          md={8}\r\n          lg={9} \r\n          className='\r\n            bg-dark \r\n            border \r\n            border-bottom-0 \r\n            border-end-0 \r\n            border-top-0 \r\n            border-3 \r\n            border-light\r\n            border-profile-hidden'\r\n        >\r\n          <h2 className='text-center'>My Orders</h2>\r\n          {loadingOrders ? (\r\n            <Loader /> \r\n          ) : errorOrders ? (\r\n            <Message variant='danger'>\r\n              {errorOrders}\r\n            </Message> \r\n          ) : (\r\n            <Table \r\n              striped \r\n              bordered \r\n              hover \r\n              responsive \r\n              className='table-sm'\r\n            >\r\n              <thead>\r\n                <tr className='text-center'>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>SENT</th>\r\n                  <th></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map(order => (\r\n                  <tr key={order._id} className='text-center'>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.totalPrice} zł</td>\r\n                    <td>\r\n                    {order.isPaid ? \r\n                      order.paidAt.substring(0, 10) : (\r\n                      <i \r\n                        className='fas fa-times' \r\n                        style={{ color: 'red' }}\r\n                      >\r\n                      </i>\r\n                      )\r\n                    }\r\n                    </td>\r\n                    <td>\r\n                    {order.isSent ? \r\n                      order.sentOn.substring(0, 10) : (\r\n                      <i \r\n                        className='fas fa-times'\r\n                        style={{ color: 'red' }}\r\n                      >\r\n                      </i>\r\n                      )\r\n                    }\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`order/${order._id}`}>\r\n                        <Button \r\n                          className='btn-sm' \r\n                          variant='info'\r\n                        >\r\n                          Details\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport { \r\n  ORDER_CREATE_REQUEST, \r\n  ORDER_CREATE_SUCCESS, \r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST, \r\n  ORDER_DETAILS_SUCCESS, \r\n  ORDER_DETAILS_FAIL, \r\n  ORDER_PAY_REQUEST, \r\n  ORDER_PAY_SUCCESS, \r\n  ORDER_PAY_FAIL,\r\n  ORDER_SEND_REQUEST,\r\n  ORDER_SEND_SUCCESS,\r\n  ORDER_SEND_FAIL,\r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_SUCCESS,\r\n  ORDER_MY_LIST_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL   \r\n} from '../constants/orderConstants';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\nimport { logout } from '../actions/userActions';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.post('/api/orders', order, config);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data\r\n    })\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data\r\n    })\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_PAY_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const sendOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_SEND_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\r\n\r\n    dispatch({\r\n      type: ORDER_SEND_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_SEND_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const myOrdersList = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_MY_LIST_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get('/api/orders/myorders', config);\r\n\r\n    dispatch({\r\n      type: ORDER_MY_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n\r\n    dispatch({\r\n      type: ORDER_MY_LIST_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_LIST_REQUEST })\r\n\r\n    const { \r\n      userLogin: { userInfo } \r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`\r\n      }\r\n    };\r\n\r\n    const { data } = await axios.get('/api/orders', config);\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n\r\n    if (message === 'Not authorized! Token failed.') {\r\n      dispatch(logout())\r\n    }\r\n    \r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: message\r\n    })\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport Meta from '../components/Meta';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector(state => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ \r\n      address, \r\n      city, \r\n      postalCode \r\n    }))\r\n    history.push('/payment')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Shipping'} />\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 /> \r\n        <h1 className='text-color-cyan'>Shipping</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='address' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Address:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder='Enter your address' \r\n              value={address || ''} \r\n              onChange={(e) => setAddress(e.target.value)}\r\n              required\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='city' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              City:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder='Enter your city' \r\n              value={city || ''}  \r\n              onChange={(e) => setCity(e.target.value)}\r\n              required\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='postalCode' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Postal Code:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder='Enter your postal code' \r\n              value={postalCode || ''}  \r\n              onChange={(e) => setPostalCode(e.target.value)}\r\n              required\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Container className='text-center'>\r\n            <Button \r\n              type='submit' \r\n              variant='outline-light'\r\n              className='w-50 mt-3 btn-res' \r\n            >\r\n              Continue\r\n            </Button>\r\n          </Container>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Container, Col, Form, Button } from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport Meta from '../components/Meta';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector(state => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  if (!shippingAddress.address) {\r\n    history.push('/shipping')\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(savePaymentMethod(paymentMethod))\r\n    history.push('/placeorder')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Payment'} />\r\n      <FormContainer>\r\n        <CheckoutSteps step1 step2 step3 /> \r\n        <h1 className='text-color-cyan'>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label \r\n              as='legend' \r\n              className='text-color-white text-center'\r\n            >\r\n              Choose Your Payment Method:\r\n            </Form.Label>\r\n            <Col>\r\n              <Form.Check \r\n                type='radio' \r\n                label='PayPal or Credit Card' \r\n                id='PayPal' \r\n                name='paymentMethod' \r\n                value='PayPal'\r\n                className='text-color-white' \r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                checked\r\n              >\r\n              </Form.Check>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Container className='text-center'>\r\n            <Button \r\n              type='submit' \r\n              variant='outline-light'\r\n              className='w-50 mt-3 btn-res' \r\n            >\r\n              Continue\r\n            </Button>\r\n          </Container>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport Meta from '../components/Meta';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector(state => state.cart);\r\n\r\n  if (!cart.shippingAddress.address) {\r\n    history.push('/shipping')\r\n  } else if (!cart.paymentMethod) {\r\n    history.push('/payment')\r\n  }\r\n\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  }\r\n  \r\n  cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0));\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 200 ? 0 : 20);\r\n  cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice)).toFixed(2);\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { success, error, order } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: USER_DETAILS_RESET })\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(createOrder({\r\n      orderItems: cart.cartItems,\r\n      shippingAddress: cart.shippingAddress,\r\n      paymentMethod: cart.paymentMethod,\r\n      itemsPrice: cart.itemsPrice,\r\n      shippingPrice: cart.shippingPrice,\r\n      totalPrice: cart.totalPrice\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Place Order'} />\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={7} lg={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item \r\n              className='\r\n                border \r\n                border-start-0 \r\n                border-end-0 \r\n                border-top-0 \r\n                border-3 \r\n                border-light \r\n                bg-dark'\r\n            >\r\n              <h2 className='text-color-cyan'>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {' '}{cart.shippingAddress.address}, \r\n                {' '}{cart.shippingAddress.city},  \r\n                {' '}{cart.shippingAddress.postalCode}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item \r\n              className='\r\n                border \r\n                border-start-0 \r\n                border-end-0 \r\n                border-top-0 \r\n                border-3 \r\n                border-light \r\n                bg-dark'\r\n            >\r\n              <h2 className='text-color-cyan'>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item \r\n              className='\r\n                border \r\n                border-start-0 \r\n                border-end-0 \r\n                border-top-0 \r\n                border-3 \r\n                border-light \r\n                bg-dark'\r\n            >\r\n              <h2 className='text-color-cyan'>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n              <Message>Your cart is empty.</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item \r\n                      key={index} \r\n                      className='\r\n                        border \r\n                        border-start-0 \r\n                        border-end-0 \r\n                        border-top-0 \r\n                        border-3 \r\n                        bg-dark'\r\n                    >\r\n                      <Row>\r\n                        <Col lg={1} className='col-2'>\r\n                          <Image \r\n                            src={item.image} \r\n                            alt={item.name} \r\n                            fluid \r\n                            rounded \r\n                          />\r\n                        </Col>\r\n                        <Col lg={7} className='col-5'>\r\n                          <Link \r\n                            className='text-color-white link-hover' \r\n                            to={`/product/${item.product}`}\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4} className='col-5'>\r\n                          {item.quantity} x {item.price} zł = {item.quantity * item.price} zł\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={5} lg={4} className='mt-3 mt-lg-0'>\r\n          <Card className='border-primary rounded'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <h2 className='text-color-cyan'>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>{cart.itemsPrice} zł</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>{cart.shippingPrice} zł</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>{cart.totalPrice} zł</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n                <ListGroup.Item className='bg-dark'>\r\n                  {error && \r\n                    <Message variant='danger'>\r\n                      {error}\r\n                    </Message>\r\n                  }\r\n                </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Button \r\n                  type='button'\r\n                  variant='outline-primary' \r\n                  className='w-100' \r\n                  disabled={cart.cartItems === 0} \r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport { getOrderDetails, payOrder, sendOrder } from '../actions/orderActions';\r\nimport { ORDER_PAY_RESET, ORDER_SEND_RESET } from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector(state => state.orderPay);\r\n  const { \r\n    loading: loadingPay, \r\n    success: successPay \r\n  } = orderPay;\r\n\r\n  const orderSend = useSelector(state => state.orderSend);\r\n  const { \r\n    loading: loadingSend, \r\n    success: successSend \r\n  } = orderSend;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    }\r\n  \r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=PLN`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successSend || order._id !== orderId) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_SEND_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if(!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, userInfo, order, orderId, successPay, successSend, history])\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const sendHandler = () => {\r\n    dispatch(sendOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader /> \r\n  ) : error ? (\r\n    <Message variant='danger'>${error}</Message> \r\n  ) : ( \r\n    <>\r\n      <Meta title={'Game Master | Order'} />\r\n      <h1 className='order-text'>Order ID: {order._id}</h1>\r\n      <Row>\r\n        <Col md={7} lg={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item \r\n              className='\r\n                border \r\n                border-start-0 \r\n                border-end-0 \r\n                border-top-0 \r\n                border-3 \r\n                border-light \r\n                bg-dark'\r\n            >\r\n              <h2 className='text-color-cyan'>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> \r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a \r\n                  className='text-color-white link-hover' \r\n                  href={`mailto:${order.user.email}`}\r\n                >\r\n                  {order.user.email}\r\n                </a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {' '}{order.shippingAddress.address}, \r\n                {' '}{order.shippingAddress.city},  \r\n                {' '}{order.shippingAddress.postalCode}\r\n              </p>\r\n              {order.isSent ? (\r\n                <Message variant='success'>\r\n                  Sent On: {order.sentOn.substring(0, 19).replace('T', ' at ')}.\r\n                </Message> \r\n                ) : (\r\n                <Message variant='danger'>\r\n                  Not Sent.\r\n                </Message>\r\n                )\r\n              }\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item \r\n              className='\r\n                border \r\n                border-start-0 \r\n                border-end-0 \r\n                border-top-0 \r\n                border-3 \r\n                border-light \r\n                bg-dark'\r\n            >\r\n              <h2 className='text-color-cyan'>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>\r\n                  Paid On: {order.paidAt.substring(0, 19).replace('T', ' at ')}.\r\n                </Message> \r\n                ) : (\r\n                <Message variant='danger'>\r\n                  Not Paid.\r\n                </Message>\r\n                )\r\n              }\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item \r\n              className='\r\n                border \r\n                border-start-0 \r\n                border-end-0 \r\n                border-top-0 \r\n                border-3 \r\n                border-light \r\n                bg-dark'\r\n            >\r\n              <h2 className='text-color-cyan'>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty.</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item \r\n                      key={index}\r\n                      className='\r\n                        border \r\n                        border-start-0 \r\n                        border-end-0 \r\n                        border-top-0 \r\n                        border-3 \r\n                        bg-dark'\r\n                     >\r\n                      <Row>\r\n                        <Col lg={1} className='col-2'>\r\n                          <Image \r\n                            src={item.image} \r\n                            alt={item.name} \r\n                            fluid \r\n                            rounded \r\n                          />\r\n                        </Col>\r\n                        <Col lg={7} className='col-5'>\r\n                          <Link \r\n                            className='text-color-white link-hover' \r\n                            to={`/product/${item.product}`}\r\n                          >\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4} className='col-5'>\r\n                          {item.quantity} x {item.price} zł = {item.quantity * item.price} zł\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col lg={4} md={5} className='mt-3 mt-lg-0'>\r\n          <Card className='border-primary rounded'>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <h2 className='text-color-cyan'>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>{order.itemsPrice} zł</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>{order.shippingPrice} zł</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item className='bg-dark'>\r\n                <Row>\r\n                  <Col>Total:</Col>\r\n                  <Col>{order.totalPrice} zł</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item className='bg-dark'>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? <Loader /> : (\r\n                    <PayPalButton \r\n                      amount={order.totalPrice}\r\n                      currency='PLN' \r\n                      onSuccess={successPaymentHandler} \r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingSend && <Loader />}\r\n              {userInfo && \r\n                userInfo.isAdmin && \r\n                order.isPaid && \r\n                !order.isSent && (\r\n                  <ListGroup.Item className='bg-dark'>\r\n                    <Container className='text-center'>\r\n                      <Button \r\n                        type='button'\r\n                        variant='outline-primary' \r\n                        className='\r\n                          btn \r\n                          btn-block \r\n                          my-sm-3\r\n                          my-lg-0 \r\n                          btn-res'\r\n                        onClick={sendHandler}\r\n                      >\r\n                        Mark As Sent\r\n                      </Button>\r\n                    </Container> \r\n                  </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>  \r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector(state => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector(state => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Admin User List'} />\r\n      <h1>User List</h1>\r\n      {loading ? (\r\n        <Loader /> \r\n      ) : error ? (\r\n        <Message variant='danger'>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Table \r\n          striped \r\n          bordered \r\n          hover \r\n          responsive \r\n          className='table-sm'\r\n        >\r\n          <thead>\r\n            <tr className='text-center text-color-cyan'>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => (\r\n              <tr key={user._id} className='text-center'>\r\n                <td>{user._id}</td>  \r\n                <td>{user.name}</td>  \r\n                <td>\r\n                  <a \r\n                    href={`mailto:${user.email}`} \r\n                    className='text-color-white link-hover'\r\n                  >\r\n                    {user.email}\r\n                  </a>\r\n                </td>  \r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i \r\n                      className='fas fa-check' \r\n                      style={{ color: 'green' }}\r\n                    >  \r\n                    </i>\r\n                    ) : (\r\n                    <i \r\n                      className='fas fa-times' \r\n                      style={{ color: 'red' }}\r\n                    >\r\n                    </i>\r\n                    )\r\n                  }\r\n                </td> \r\n                <td className='d-flex'>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button \r\n                      variant='light' \r\n                      className='btn-sm me-3 me-lg-2'\r\n                    >\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                    <Button \r\n                      variant='danger' \r\n                      className='btn-sm' \r\n                      onClick={() => deleteHandler(user._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                </td> \r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector(state => state.userUpdate);\r\n  const { \r\n    loading: loadingUpdate, \r\n    error: errorUpdate, \r\n    success: successUpdate \r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, successUpdate, user, userId, history])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link \r\n        to='/admin/userlist' \r\n        className='btn btn-outline-light my-3'\r\n      >\r\n        Go Back\r\n      </Link>\r\n      <Meta title={'Game Master | Admin User Edit'} />\r\n      <FormContainer>\r\n        <h1 className='text-center'>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && \r\n          <Message varaint='danger'>\r\n            {errorUpdate}\r\n          </Message>}\r\n        {loading ? (\r\n          <Loader /> \r\n        ) : error ? (\r\n        <Message variant='danger'>\r\n          {error}\r\n        </Message> \r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name' className='mb-1'>\r\n              <Form.Label className='text-color-white'>\r\n                Name:\r\n              </Form.Label>\r\n              <Form.Control \r\n                type='name' \r\n                placeholder='Enter your name' \r\n                value={name} \r\n                onChange={(e) => setName(e.target.value)}\r\n              >\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email' className='mb-1'>\r\n              <Form.Label className='text-color-white'>\r\n                Email:\r\n              </Form.Label>\r\n              <Form.Control \r\n                type='email' \r\n                placeholder='Enter your email' \r\n                value={email} \r\n                onChange={(e) => setEmail(e.target.value)}\r\n              >\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin' className='mb-1 my-2'>\r\n              <Form.Check \r\n                type='checkbox'\r\n                label='Is Admin?' \r\n                checked={isAdmin} \r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              >\r\n              </Form.Check>\r\n            </Form.Group>\r\n\r\n            <Container className='text-center'>\r\n              <Button \r\n                type='submit' \r\n                variant='outline-light'\r\n                className='w-50 mt-3 btn-res' \r\n              >\r\n                Update\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Col, Table, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport Paginate from '../components/Paginate';\r\nimport { \r\n  listProducts, \r\n  createProduct, \r\n  deleteProduct \r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'; \r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  const productCreate = useSelector(state => state.productCreate);\r\n  const { \r\n    loading: loadingCreate, \r\n    error: errorCreate, \r\n    success: successCreate, \r\n    product: createdProduct \r\n  } = productCreate;\r\n\r\n  const productDelete = useSelector(state => state.productDelete);\r\n  const { \r\n    loading: loadingDelete, \r\n    error: errorDelete, \r\n    success: successDelete \r\n  } = productDelete;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [dispatch, history, userInfo, successCreate, successDelete, createdProduct, pageNumber])\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Admin Product List'} />\r\n      <Row>\r\n        <Col>\r\n          <h1 className='text-center'>Products</h1>\r\n        </Col>\r\n      </Row>\r\n      <Button \r\n        className='my-3'\r\n        variant='outline-light' \r\n        onClick={createProductHandler}\r\n      >\r\n        <i className='fas fa-plus me-1'></i> Create New Product\r\n      </Button>\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && \r\n        <Message variant='danger'>\r\n          {errorCreate}\r\n        </Message>\r\n      }\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && \r\n        <Message variant='danger'>\r\n          {errorDelete}\r\n        </Message>\r\n      }\r\n      {loading ? (\r\n        <Loader /> \r\n      ) : error ? (\r\n        <Message variant='danger'>\r\n          {error}\r\n        </Message> \r\n      ) : (\r\n        <>\r\n          <Table \r\n            striped \r\n            bordered \r\n            hover \r\n            responsive \r\n            className='table-sm'\r\n          >\r\n            <thead>\r\n              <tr className='text-center text-color-cyan'>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>GENRE</th>\r\n                <th>COMPANY</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map(product => (\r\n                <tr key={product._id} className='text-center'>\r\n                  <td>{product._id}</td>  \r\n                  <td>{product.name}</td>\r\n                  <td>{product.price} zł</td>\r\n                  <td>{product.genre}</td>\r\n                  <td>{product.company}</td>  \r\n                  <td className='d-flex'>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button \r\n                        variant='light' \r\n                        className='btn-sm me-3 me-lg-2'\r\n                      >\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button \r\n                      variant='danger' \r\n                      className='btn-sm' \r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td> \r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [genre, setGenre] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector(state => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector(state => state.productUpdate);\r\n  const { \r\n    loading: loadingUpdate, \r\n    error: errorUpdate, \r\n    success: successUpdate \r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setGenre(product.genre)\r\n        setCompany(product.company)\r\n        setCountInStock(product.countInStock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, product, productId, successUpdate, history])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n\r\n      const { data } = await axios.post('/api/uploads', formData, config);\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateProduct({\r\n      _id: productId,\r\n      name,\r\n      price,\r\n      image,\r\n      genre, \r\n      company,\r\n      countInStock,\r\n      description\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link \r\n        to='/admin/productlist' \r\n        className='btn btn-outline-light my-3'\r\n      >\r\n        Go Back\r\n      </Link>\r\n      <Meta title={'Game Master | Admin Product Edit'} />\r\n      <FormContainer>\r\n        <h1 className='text-center'>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && \r\n        <Message variant='danger'>\r\n          {errorUpdate}\r\n        </Message>\r\n        }\r\n        {loading ? (\r\n          <Loader /> \r\n        ) : error ? (\r\n          <Message variant='danger'>\r\n            {error}\r\n          </Message> \r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name' className='mb-1'>\r\n              <Form.Label className='text-color-white'>\r\n                Name:\r\n              </Form.Label>\r\n              <Form.Control \r\n                type='name' \r\n                placeholder='Set the product name' \r\n                value={name} \r\n                onChange={(e) => setName(e.target.value)}\r\n              >\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price' className='mb-1'>\r\n              <Form.Label className='text-color-white'>\r\n                Price:\r\n              </Form.Label>\r\n              <Form.Control \r\n                type='number' \r\n                placeholder='Set the product price' \r\n                value={price} \r\n                onChange={(e) => setPrice(e.target.value)}\r\n              >\r\n              </Form.Control>\r\n            </Form.Group>\r\n  \r\n          <Form.Group controlId='image' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Image:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder='Set the product image'  \r\n              value={image} \r\n              onChange={(e) => setImage(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n            <Form.File \r\n              id='image-file' \r\n              custom \r\n              onChange={uploadFileHandler}\r\n            >\r\n            </Form.File>\r\n            {uploading && <Loader />}\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='genre' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Genre:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder='Set the product genre' \r\n              value={genre} \r\n              onChange={(e) => setGenre(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='company' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Company:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='text' \r\n              placeholder='Set the game devs name' \r\n              value={company} \r\n              onChange={(e) => setCompany(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='countinstock' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Count In Stock:\r\n            </Form.Label>\r\n            <Form.Control \r\n              type='number' \r\n              placeholder='Set the product count' \r\n              value={countInStock} \r\n              onChange={(e) => setCountInStock(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='description' className='mb-1'>\r\n            <Form.Label className='text-color-white'>\r\n              Description:\r\n            </Form.Label>\r\n            <Form.Control \r\n              as='textarea' \r\n              rows={6}\r\n              placeholder='Enter your product description' \r\n              value={description} \r\n              onChange={(e) => setDescription(e.target.value)}\r\n            >\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n            <Container className='text-center'>\r\n              <Button \r\n                type='submit' \r\n                variant='outline-light' \r\n                className='w-50 my-3 btn-res'\r\n              >\r\n                Update Product\r\n              </Button>\r\n            </Container>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Meta from '../components/Meta';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector(state => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, userInfo, history])\r\n\r\n  return (\r\n    <>\r\n      <Meta title={'Game Master | Admin Order List'} />\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader /> \r\n      ) : error ? (\r\n        <Message variant='danger'>\r\n          {error}\r\n        </Message>\r\n      ) : (\r\n        <Table \r\n          striped \r\n          bordered \r\n          hover \r\n          responsive \r\n          className='table-sm'\r\n        >\r\n          <thead>\r\n            <tr className='text-center text-color-cyan'>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>SENT</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id} className='text-center'>\r\n                <td>{order._id}</td>  \r\n                <td>{order.user && order.user.name}</td>  \r\n                <td>{order.createdAt.substring(0, 10)}</td>  \r\n                <td>{order.totalPrice} zł</td>  \r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i \r\n                        className='fas fa-times' \r\n                        style={{color: 'red'}}\r\n                      >\r\n                      </i>\r\n                    )\r\n                  }\r\n                </td>\r\n                <td>\r\n                  {order.isSent ? (\r\n                    order.sentOn.substring(0, 10)\r\n                    ) : (\r\n                      <i \r\n                        className='fas fa-times' \r\n                        style={{color: 'red'}}\r\n                      >\r\n                      </i>\r\n                    )\r\n                  }\r\n                </td>  \r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button \r\n                      variant='light' \r\n                      className='btn-sm'\r\n                    >\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td> \r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n      <Header className='header' />\n        <main className='py-3'>\n          <Container>\n            <Route \n              path='/order/:id' \n              component={OrderScreen} \n            />\n            <Route \n              path='/shipping' \n              component={ShippingScreen} \n            />\n            <Route \n              path='/payment' \n              component={PaymentScreen} \n            />\n            <Route \n              path='/placeorder' \n              component={PlaceOrderScreen} \n            />\n            <Route \n              path='/login' \n              component={LoginScreen} \n            />\n            <Route \n              path='/register' \n              component={RegisterScreen} \n            />\n            <Route \n              path='/profile' \n              component={ProfileScreen} \n            />\n            <Route \n              path='/product/:id' \n              component={ProductScreen} \n            />\n            <Route \n              path='/cart/:id?' \n              component={CartScreen} \n            />\n            <Route \n              path='/admin/userlist' \n              component={UserListScreen} \n            />\n            <Route \n              path='/admin/user/:id/edit' \n              component={UserEditScreen} \n            />\n            <Route \n              path='/admin/productlist' \n              component={ProductListScreen}\n              exact \n            />\n            <Route \n              path='/admin/productlist/:pageNumber' \n              component={ProductListScreen} \n              exact\n            />\n            <Route \n              path='/admin/product/:id/edit' \n              component={ProductEditScreen} \n            />\n            <Route \n              path='/admin/orderlist' \n              component={OrderListScreen} \n            />\n            <Route \n              path='/search/:keyword' \n              component={HomeScreen}\n              exact \n            />\n            <Route \n              path='/page/:pageNumber' \n              component={HomeScreen} \n              exact \n            />\n            <Route \n              path='/search/:keyword/page/:pageNumber' \n              component={HomeScreen} \n              exact \n            />\n            <Route \n              path='/' \n              component={HomeScreen}\n              exact \n            />\n          </Container>\n        </main>\n      <Footer className='footer' />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}